@page "/Messages/{SystemName}"
@using PikaStatus.Models
@inject Services.MessageService MessageService

<div class="container-fluid">
    <div class="card-panel indigo">
        <h4 class="white-text">Messages for @SystemName</h4>
    </div>
    <div class="row">
        @if (_messageEntities != null)
        {
            <div class="col s12 m6 l6">
                @for (var i = 0; i < _messageEntities.Count; i += 2)
                {
                    var message = _messageEntities[i];
                    var r = @_badgeColorsDic.TryGetValue(message.MessageType, out var badgeColor); 
                    <div class="card indigo white-text">
                        <span class="badge @badgeColor white-text">@message.MessageType.ToString()</span>
                        <div class="card-content">
                            <span class="card-title">
                                <b>@message.Message</b>
                            </span>
                            <div class="row">
                                <div class="col s12 m12 l12">
                                    Message was created at <b>@message.CreatedAt</b>
                                </div>
                                <div class="col s12 m12 l12">
                                    Message was updated at <b>@message.UpdatedAt</b>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col s12 m6 l6">
                @for (var i = 1; i < _messageEntities.Count; i += 2)
                {
                    var message = _messageEntities[i];
                    var r = @_badgeColorsDic.TryGetValue(message.MessageType, out var badgeColor);
                    <div class="card indigo white-text">
                        <span class="badge @badgeColor white-text">@message.MessageType.ToString()</span>
                        <div class="card-content">
                            <span class="card-title">
                                <b>@message.Message</b>
                            </span>
                            <div class="row">
                                <div class="col s12 m12 l12">
                                    Message was created at <b>@message.CreatedAt</b>
                                </div>
                                <div class="col s12 m12 l12">
                                    Message was updated at <b>@message.UpdatedAt</b>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="card-panel red darken-3 white-text">
                Data from this system wasn't available.
            </div>
        }
    </div>
</div>

@code{
    [Parameter]
    public string SystemName { get; set; }
    private Tuple<bool,List<MessageEntity>> _messageTuple;
    private Dictionary<MessageType, string> _badgeColorsDic = new Dictionary<MessageType, string>();
    private List<MessageEntity> _messageEntities = new List<MessageEntity>();
    
    protected override async Task OnInitializedAsync()
    {
        _messageTuple = await MessageService.GetMessages(SystemName);
        _messageEntities = _messageTuple.Item2;
        _badgeColorsDic.Add(MessageType.Info, "light-green darken-3");
        _badgeColorsDic.Add(MessageType.Issue, "red darken-3");
        _badgeColorsDic.Add(MessageType.None, "indigo lighten-4");
    }
}