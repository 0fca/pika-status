@inject Services.MessageService MessageService
@using PikaStatus.Components


        @if (isDone == true)
        {
            <div class="collection-item">
                <div class="row">
                    <div class="col s6 m11 l11">
                        <span class="flow-text grey-text text-darken-3 left mt-3">
                            @SystemName
                        </span>
                    </div>
                    <div class="col s6 m1 l1 center-align">
                        <strong><span class="badge @_messageCardColor white-text center-align mt-4">@_badgeText</span></strong>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="collection-item">
                <ProgressSpinner PromptText = "Loading details..."/>
            </div>
        }

@code{
    [Parameter]
    public string SystemName { get; set; }
    private Tuple<bool,string> _messageTuple;
    private string _messageCardColor = "";
    private string _message = "";
    private string _badgeText = "";

    private bool isDone = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //_messageTuple = await MessageService.GetLatestMessage(SystemName);
        }
        catch 
        {
            _messageTuple = new Tuple<bool, string>(false, "No messages available for the system.");
        }
        var (status, text) = await MessageService.GetSystemStateText(SystemName);
        //_message = _messageTuple.Item2 ?? "Probably no message is available.";
        isDone = status;
        _messageCardColor = text.Equals("Graceful") ? "light-green darken-3" : "red darken-3";
        _badgeText = text;
    }
}

